service: api-omnea


provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  logs:
    restApi:
      format: '{ "httpMethod":"$context.httpMethod", "resourcePath":"$context.resourcePath", "status":"$context.status", "body": "$input.body", "params": "$input.params()", "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller" }'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'route53:ChangeResourceRecordSets'
          Resource:
            - 'arn:aws:route53:::hostedzone/Z1009887TDI7WN2LFGHJ'
            - 'arn:aws:route53:::hostedzone/Z065625021HFJ6669HH5Q'
        - Effect: 'Allow'
          Action:
            - 'logs:*'
          Resource:
            - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*:*'
        - Effect: 'Allow'
          Action:
            - 's3:*'
          Resource:
            - 'arn:aws:s3:::*'
  environment:
    # AWS_UPLOAD_BUCKET_ID: ${ssm:/prod/AWS_UPLOAD_BUCKET_ID}
    # AUTH0_BASE_URL: ${ssm:/prod/AUTH0_BASE_URL}
    # AUTH0_CALLBACK: ${ssm:/prod/AUTH0_CALLBACK}
    # AUTH0_CLIENT_ID: ${ssm:/prod/AUTH0_CLIENT_ID}
    # AUTH0_CLIENT_SECRET: ${ssm:/prod/AUTH0_CLIENT_SECRET~true}
    # AUTH0_COOKIE_DOMAIN: ${ssm:/prod/AUTH0_COOKIE_DOMAIN}
    # AUTH0_ISSUER_BASE_URL: ${ssm:/prod/AUTH0_ISSUER_BASE_URL}
    # AUTH0_POST_LOGOUT_REDIRECT: ${ssm:/prod/AUTH0_POST_LOGOUT_REDIRECT}
    # AUTH0_SECRET: ${ssm:/prod/AUTH0_SECRET~true}
    # NEXT_PUBLIC_AUTH0_LOGIN: ${ssm:/prod/NEXT_PUBLIC_AUTH0_LOGIN}
    # NEXT_PUBLIC_AUTH0_PROFILE: ${ssm:/prod/NEXT_PUBLIC_AUTH0_PROFILE}
    # NEXT_PUBLIC_AUTH_POST_LOGIN: ${ssm:/prod/NEXT_PUBLIC_AUTH_POST_LOGIN}

functions:
  hello:
    handler: src/hello.main
    events:
      - http:
          path: hello
          method: get
          cors: true
  auth-me:
    handler: src/paths/auth/me.main
    events:
      - http:
          path: auth/me
          method: get
          cors: true
  auth-login:
    handler: src/paths/auth/login.main
    events:
      - http:
          path: auth/login
          method: get
          cors: true
  auth-logout:
    handler: src/paths/auth/logout.main
    events:
      - http:
          path: auth/logout
          method: get
          cors: true
  auth-callback:
    handler: src/paths/auth/callback.main
    events:
      - http:
          path: auth/callback
          method: get
          cors: true
  dns-subdomain-new:
    handler: src/paths/dns/subdomain/new.main
    events:
      - http:
          path: dns/subdomain/new
          method: post
          cors: true
  dns-subdomain-delete:
    handler: src/paths/dns/subdomain/delete.main
    events:
      - http:
          path: dns/subdomain/delete
          method: post
          cors: true
  uploads:
    handler: src/paths/uploads/get.main
    events:
      - http:
          path: /uploads/{key}
          method: get
          cors: true
  generate-read-url:
    handler: src/paths/assets/generate-read-url.main
    events:
      - http:
          path: assets/generate-read-url
          method: post
          cors: true
  generate-upload-url:
    handler: src/paths/assets/generate-upload-url.main
    events:
      - http:
          path: hooks/assets/generate-upload-url
          method: post

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-apigw-binary
  - serverless-domain-manager

custom:
  bundle:
    caching: false
  apigwBinary:
    types:
      - 'image/avif'
      - 'image/*'
  customDomain:
    rest:
      domainName: 'api.omnea.co'
      hostedZoneId: Z08726532NF9CHDVZ037S
      certificateArn: arn:aws:acm:us-east-1:887143267612:certificate/6b8b6543-7d0d-4dd2-a72a-909c5f982dbf
      endpointType: 'regional'
      securityPolicy: tls_1_2
