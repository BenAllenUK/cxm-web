{
  "root": true,
  "env": {
    "node": true,
    "es6": true
  },
  "plugins": ["unused-imports"],
  "parserOptions": { "ecmaVersion": 8 }, // to enable features such as async/await
  "ignorePatterns": ["node_modules", ".next/*", ".out/*", "!.prettierrc.js", "src/generated/graphql.tsx"],
  "extends": ["eslint:recommended"],
  "overrides": [
    // This configuration will apply only to TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "settings": { "react": { "version": "detect" } },
      "env": {
        "browser": true,
        "node": true,
        "es6": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended", // TypeScript rules
        "plugin:react/recommended", // React rules
        "plugin:react-hooks/recommended", // React hooks rules
        "plugin:jsx-a11y/recommended", // Accessibility rules
        "plugin:prettier/recommended"
      ],
      "rules": {
        // We will use TypeScript"s types for component props instead
        "react/prop-types": "off",

        // No need to import React when using Next.js
        "react/react-in-jsx-scope": "off",

        // This rule is not compatible with Next.js"s <Link /> components
        "jsx-a11y/anchor-is-valid": "off",

        // Why would you want unused vars?
        // "@typescript-eslint/no-unused-vars": ["error"],

        "prettier/prettier": ["error", {}, { "usePrettierrc": true }],

        "@typescript-eslint/no-empty-function": "off",

        // I suggest this setting for requiring return types on functions only where useful
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",

        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": "warn"
      }
    }
  ]
}
